# This is a basic workflow to help you get started with Actions

name: utterances-vote-init

on:
  # Trigger the workflow on push but only for the master branch
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup R
        uses: r-lib/actions/setup-r@master
      - name: Install system dependencies
        run: |
          sudo -s eval "apt-get update && apt-get install -y libcurl4-openssl-dev"
      - name: Query dependencies
        run: |
          install.packages("remotes")
          saveRDS(remotes::package_deps("gh"), "depends.Rds", version = 2)
        shell: Rscript {0}
      - name: Cache R packages
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ hashFiles('depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-
      - name: Install package dependencies
        run: |
          install.packages(readRDS("depends.Rds")$package)
        shell: Rscript {0}
      - name: Create new issue
        run: |
          owner <- "riccardoporreca"
          repo <- "test-utterances"
          committed_files <- gh::gh(
            "/repos/:owner/:repo/commits/:sha",
            sha = Sys.getenv("GITHUB_SHA"),
            owner = owner, repo = repo
          )$files
          str(committed_files, max.level = 2)
          new_meta_files <- committed_files[
            sapply(committed_files, function(file) {
              file$status == "added" && dirname(file$filename) == "contest/contributions"
            })]
          stopifnot(length(new_meta_files) <= 1L)
          str(new_meta_files)
          new_issue <- {
            meta <- yaml::yaml.load(rawToChar(curl::curl_fetch_memory(new_meta_file$raw_url)$content))
            name <- tools::file_path_sans_ext(basename(new_meta_file$filename))
            title <- sprintf("%s/%s", repo, name)
            content <- paste0(
              sprintf("# %s", meta$title), "\n", "\n",
              sprintf("https://%s.github.io/%s/%s.html", tolower(owner), repo, name)
            )
            list(
              title = title,
              body = content,
              labels = list(":+1:")
            )
          }
          str(new_issue)
        shell: Rscript {0}
      - name: Initial voting comment
        if: contains(github.event.issue.labels.*.name, ':+1:')
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            Vote for this contribution by giving it a :+1:!
            _Please avoid using comments or other reactions_
          reaction-type: '+1'
